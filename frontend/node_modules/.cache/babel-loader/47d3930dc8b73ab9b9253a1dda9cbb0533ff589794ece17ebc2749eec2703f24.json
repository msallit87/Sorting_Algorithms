{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\czsal\\\\Downloads\\\\Sorting_Algorithms_v18_With_Tests\\\\frontend\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport VisualBars from './components/VisualBars';\nimport TTS from './components/TTS';\nimport Challenge from './components/Challenge';\n\n// This is the main function/component: App\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [array, setArray] = useState('');\n  const [algorithm, setAlgorithm] = useState('bubble');\n  const [steps, setSteps] = useState([]);\n  const [metrics, setMetrics] = useState(null);\n  const [currentStep, setCurrentStep] = useState(0);\n  const [currentArray, setCurrentArray] = useState([]);\n  const [highlight, setHighlight] = useState([]);\n  const [explanation, setExplanation] = useState('');\n  const [ttsEnabled, setTtsEnabled] = useState(true);\n  const [challengeMode, setChallengeMode] = useState(true);\n  const [userGuess, setUserGuess] = useState('');\n  const [feedback, setFeedback] = useState('');\n  const [stepHistory, setStepHistory] = useState([]);\n  const [aiSuggestion, setAiSuggestion] = useState(\"\");\n  const [isLoadingAI, setIsLoadingAI] = useState(false);\n\n  // Sends the user’s array to the backend at /ai-suggest.\n  // Displays the returned AI-generated suggestion as it streams in real-time\n  const handleAISuggestion = async () => {\n    // Clear previous data before making new AI request\n    setSteps([]);\n    setMetrics({});\n    setCurrentArray([]);\n    setCurrentStep(0);\n    setExplanation('');\n    setIsLoadingAI(true);\n    setAiSuggestion(''); // Reset AI suggestion display\n\n    try {\n      // Convert input string to an array of numbers\n      const parsedArray = array.split(',').map(Number);\n\n      // Determine backend API URL based on environment\n      const API_BASE = process.env.NODE_ENV === \"development\" ? \"http://localhost:8000\" : process.env.REACT_APP_API_BASE;\n\n      // 📡 Send POST request to backend to get AI-generated suggestion\n      const response = await fetch(`${API_BASE}/ai-suggest`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          array: parsedArray\n        })\n      });\n\n      //  Handle failed fetch\n      if (!response.ok) throw new Error(\"Failed to fetch AI suggestion\");\n\n      //  Stream the response back as it's being received\n      const reader = response.body.getReader();\n      const decoder = new TextDecoder(\"utf-8\");\n      let result = \"\";\n      while (true) {\n        const {\n          done,\n          value\n        } = await reader.read();\n        if (done) break;\n        const chunk = decoder.decode(value, {\n          stream: true\n        });\n        result += chunk;\n        setAiSuggestion(prev => prev + chunk); //  Update live as it streams\n      }\n    } catch (err) {\n      console.error(\"AI fetch error:\", err);\n      setAiSuggestion(\"Error fetching suggestion.\");\n    } finally {\n      setIsLoadingAI(false); // Stop loading spinner\n    }\n  };\n\n  // This component/function handles: handleSort\n  const handleSort = async () => {\n    setAiSuggestion(\"\"); // Clear previous AI suggestion\n    const parsedArray = array.split(',').map(Number);\n    const response = await axios.post(`https://sorting_algorithms-1.onrender.com/sort/${algorithm}`, {\n      array: parsedArray\n    });\n    setSteps(response.data.steps);\n    setMetrics(response.data.metrics);\n    setCurrentArray(parsedArray);\n    setCurrentStep(0);\n    setExplanation('');\n    setFeedback('');\n    setHighlight([]);\n    setStepHistory([]);\n  };\n  useEffect(() => {\n    if (steps.length > 0 && currentStep < steps.length && !challengeMode) {\n      // This component/function handles: timer\n      const timer = setTimeout(() => {\n        const step = steps[currentStep];\n        applyStep(step);\n        setStepHistory(prev => [...prev, step]);\n        setCurrentStep(prev => prev + 1);\n      }, 1000);\n      return () => clearTimeout(timer);\n    }\n  }, [steps, currentStep, challengeMode]);\n\n  // This component/function handles: applyStep\n  const applyStep = step => {\n    setExplanation(step.explanation || '');\n    if (step.type === 'swap' && step.array) {\n      setCurrentArray(step.array);\n      setHighlight(step.indices);\n    } else if (step.type === 'compare') {\n      setHighlight(step.indices || []);\n    } else {\n      setHighlight([]);\n    }\n  };\n\n  // This component/function handles: formatStep\n  const formatStep = step => {\n    var _currentArray$a, _currentArray$b;\n    const [a, b] = step.indices || step.values || [];\n    const av = (_currentArray$a = currentArray[a]) !== null && _currentArray$a !== void 0 ? _currentArray$a : a;\n    const bv = (_currentArray$b = currentArray[b]) !== null && _currentArray$b !== void 0 ? _currentArray$b : b;\n    if (step.type === 'compare') {\n      return `Compare index ${a} (${av}) with index ${b} (${bv})`;\n    } else if (step.type === 'swap') {\n      return `Swap index ${a} (${av}) with index ${b} (${bv})`;\n    } else if (step.type === 'insert') {\n      return `Insert value ${av} at index ${a}`;\n    } else {\n      return `${step.type}`;\n    }\n  };\n\n  // This component/function handles: handleGuess\n  const handleGuess = guess => {\n    const expected = steps[currentStep];\n    const guessClean = guess.replace(/\\s/g, '').toLowerCase();\n    const expectedStr = `${expected.type}[${(expected.indices || expected.values || []).join(',')}]`;\n    if (guessClean === expectedStr) {\n      setFeedback('✅ Correct!');\n      applyStep(expected);\n      setStepHistory(prev => [...prev, expected]);\n      setCurrentStep(prev => prev + 1);\n    } else {\n      setFeedback(`❌ Incorrect. Expected something like: ${expectedStr}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      fontFamily: 'Arial',\n      margin: '2rem'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        fontSize: '2rem'\n      },\n      children: \"Sorting_Algorithms - Sorting Visualizer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      style: {\n        padding: '0.5rem',\n        width: '300px'\n      },\n      type: \"text\",\n      value: array,\n      onChange: e => setArray(e.target.value),\n      placeholder: \"Enter comma-separated numbers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      style: {\n        padding: '0.5rem',\n        marginLeft: '1rem'\n      },\n      value: algorithm,\n      onChange: e => setAlgorithm(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"bubble\",\n        children: \"Bubble Sort\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"merge\",\n        children: \"Merge Sort\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"insertion\",\n        children: \"Insertion Sort\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"quick\",\n        children: \"Quick Sort\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      style: {\n        marginLeft: '1rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: challengeMode,\n        onChange: () => setChallengeMode(!challengeMode)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this), \"Challenge Mode\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      style: {\n        marginLeft: '1rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: ttsEnabled,\n        onChange: () => setTtsEnabled(!ttsEnabled)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this), \"Narrative Mode\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        padding: '0.5rem 1rem',\n        marginLeft: '1rem'\n      },\n      onClick: handleAISuggestion,\n      disabled: isLoadingAI,\n      children: isLoadingAI ? 'Optimizing...' : 'Suggest Best Sorting Algorith (AI)'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        padding: '0.5rem 1rem',\n        marginLeft: '1rem'\n      },\n      onClick: handleSort,\n      children: \"Sort\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 8\n    }, this), aiSuggestion && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"1rem\",\n        padding: \"1rem\",\n        background: \"#f5f5f5\",\n        borderRadius: \"5px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"AI Suggestion:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          margin: \"0.5rem 0\",\n          whiteSpace: \"pre-wrap\"\n        },\n        children: aiSuggestion\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 3\n    }, this), metrics && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '1rem'\n      },\n      children: [(metrics === null || metrics === void 0 ? void 0 : metrics.comparisons) !== undefined && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Comparisons:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 53\n        }, this), \" \", metrics.comparisons]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 50\n      }, this), (metrics === null || metrics === void 0 ? void 0 : metrics.swaps) !== undefined && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Swaps:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 47\n        }, this), \" \", metrics.swaps]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 44\n      }, this), (metrics === null || metrics === void 0 ? void 0 : metrics.time) !== undefined && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 46\n        }, this), \": \", metrics.time.toFixed(2), \" ms\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 43\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(VisualBars, {\n      array: currentArray,\n      highlight: highlight\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }, this), ttsEnabled && explanation && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '1rem',\n        fontStyle: 'italic'\n      },\n      children: [explanation, /*#__PURE__*/_jsxDEV(TTS, {\n        text: explanation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 9\n    }, this), !ttsEnabled && stepHistory.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '1rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Steps:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: stepHistory.map((s, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: formatStep(s)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 9\n    }, this), challengeMode && steps.length > 0 && currentStep < steps.length && /*#__PURE__*/_jsxDEV(Challenge, {\n      currentStep: steps[currentStep],\n      onGuess: handleGuess\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 9\n    }, this), feedback && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '1rem',\n        fontWeight: 'bold',\n        color: feedback.startsWith('✅') ? 'green' : 'red'\n      },\n      children: feedback\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 164,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"aY/MsMXS7eMQMeLaUy2FAvJhbPY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","VisualBars","TTS","Challenge","jsxDEV","_jsxDEV","App","_s","array","setArray","algorithm","setAlgorithm","steps","setSteps","metrics","setMetrics","currentStep","setCurrentStep","currentArray","setCurrentArray","highlight","setHighlight","explanation","setExplanation","ttsEnabled","setTtsEnabled","challengeMode","setChallengeMode","userGuess","setUserGuess","feedback","setFeedback","stepHistory","setStepHistory","aiSuggestion","setAiSuggestion","isLoadingAI","setIsLoadingAI","handleAISuggestion","parsedArray","split","map","Number","API_BASE","process","env","NODE_ENV","REACT_APP_API_BASE","response","fetch","method","headers","body","JSON","stringify","ok","Error","reader","getReader","decoder","TextDecoder","result","done","value","read","chunk","decode","stream","prev","err","console","error","handleSort","post","data","length","timer","setTimeout","step","applyStep","clearTimeout","type","indices","formatStep","_currentArray$a","_currentArray$b","a","b","values","av","bv","handleGuess","guess","expected","guessClean","replace","toLowerCase","expectedStr","join","style","fontFamily","margin","children","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","padding","width","onChange","e","target","placeholder","marginLeft","checked","onClick","disabled","marginTop","background","borderRadius","whiteSpace","comparisons","undefined","swaps","time","toFixed","fontStyle","text","s","i","onGuess","fontWeight","color","startsWith","_c","$RefreshReg$"],"sources":["C:/Users/czsal/Downloads/Sorting_Algorithms_v18_With_Tests/frontend/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport VisualBars from './components/VisualBars';\r\nimport TTS from './components/TTS';\r\nimport Challenge from './components/Challenge';\r\n\r\n// This is the main function/component: App\r\nfunction App() {\r\n  const [array, setArray] = useState('');\r\n  const [algorithm, setAlgorithm] = useState('bubble');\r\n  const [steps, setSteps] = useState([]);\r\n  const [metrics, setMetrics] = useState(null);\r\n  const [currentStep, setCurrentStep] = useState(0);\r\n  const [currentArray, setCurrentArray] = useState([]);\r\n  const [highlight, setHighlight] = useState([]);\r\n  const [explanation, setExplanation] = useState('');\r\n  const [ttsEnabled, setTtsEnabled] = useState(true);\r\n  const [challengeMode, setChallengeMode] = useState(true);\r\n  const [userGuess, setUserGuess] = useState('');\r\n  const [feedback, setFeedback] = useState('');\r\n  const [stepHistory, setStepHistory] = useState([]);\r\n  const [aiSuggestion, setAiSuggestion] = useState(\"\");\r\n  const [isLoadingAI, setIsLoadingAI] = useState(false);\r\n\r\n\r\n\r\n // Sends the user’s array to the backend at /ai-suggest.\r\n// Displays the returned AI-generated suggestion as it streams in real-time\r\nconst handleAISuggestion = async () => {\r\n  // Clear previous data before making new AI request\r\n  setSteps([]);\r\n  setMetrics({});\r\n  setCurrentArray([]);\r\n  setCurrentStep(0);\r\n  setExplanation('');\r\n  setIsLoadingAI(true);\r\n  setAiSuggestion(''); // Reset AI suggestion display\r\n\r\n  try {\r\n    // Convert input string to an array of numbers\r\n    const parsedArray = array.split(',').map(Number);\r\n\r\n    // Determine backend API URL based on environment\r\n    const API_BASE =\r\n      process.env.NODE_ENV === \"development\"\r\n        ? \"http://localhost:8000\"\r\n        : process.env.REACT_APP_API_BASE;\r\n\r\n    // 📡 Send POST request to backend to get AI-generated suggestion\r\n    const response = await fetch(`${API_BASE}/ai-suggest`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify({ array: parsedArray }),\r\n    });\r\n\r\n    //  Handle failed fetch\r\n    if (!response.ok) throw new Error(\"Failed to fetch AI suggestion\");\r\n\r\n    //  Stream the response back as it's being received\r\n    const reader = response.body.getReader();\r\n    const decoder = new TextDecoder(\"utf-8\");\r\n    let result = \"\";\r\n\r\n    while (true) {\r\n      const { done, value } = await reader.read();\r\n      if (done) break;\r\n\r\n      const chunk = decoder.decode(value, { stream: true });\r\n      result += chunk;\r\n      setAiSuggestion(prev => prev + chunk); //  Update live as it streams\r\n    }\r\n\r\n  } catch (err) {\r\n    console.error(\"AI fetch error:\", err);\r\n    setAiSuggestion(\"Error fetching suggestion.\");\r\n  } finally {\r\n    setIsLoadingAI(false); // Stop loading spinner\r\n  }\r\n};\r\n\r\n\r\n\r\n// This component/function handles: handleSort\r\n  const handleSort = async () => {\r\n    setAiSuggestion(\"\"); // Clear previous AI suggestion\r\n    const parsedArray = array.split(',').map(Number);\r\n    const response = await axios.post(\r\n  `https://sorting_algorithms-1.onrender.com/sort/${algorithm}`,\r\n  { array: parsedArray }\r\n);\r\n\r\n\r\n\r\n    setSteps(response.data.steps);\r\n    setMetrics(response.data.metrics);\r\n    setCurrentArray(parsedArray);\r\n    setCurrentStep(0);\r\n    setExplanation('');\r\n    setFeedback('');\r\n    setHighlight([]);\r\n    setStepHistory([]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (steps.length > 0 && currentStep < steps.length && !challengeMode) {\r\n// This component/function handles: timer\r\n      const timer = setTimeout(() => {\r\n        const step = steps[currentStep];\r\n        applyStep(step);\r\n        setStepHistory(prev => [...prev, step]);\r\n        setCurrentStep(prev => prev + 1);\r\n      }, 1000);\r\n      return () => clearTimeout(timer);\r\n    }\r\n  }, [steps, currentStep, challengeMode]);\r\n\r\n// This component/function handles: applyStep\r\n  const applyStep = (step) => {\r\n    setExplanation(step.explanation || '');\r\n    if (step.type === 'swap' && step.array) {\r\n      setCurrentArray(step.array);\r\n      setHighlight(step.indices);\r\n    } else if (step.type === 'compare') {\r\n      setHighlight(step.indices || []);\r\n    } else {\r\n      setHighlight([]);\r\n    }\r\n  };\r\n\r\n// This component/function handles: formatStep\r\n  const formatStep = (step) => {\r\n    const [a, b] = step.indices || step.values || [];\r\n    const av = currentArray[a] ?? a;\r\n    const bv = currentArray[b] ?? b;\r\n    if (step.type === 'compare') {\r\n      return `Compare index ${a} (${av}) with index ${b} (${bv})`;\r\n    } else if (step.type === 'swap') {\r\n      return `Swap index ${a} (${av}) with index ${b} (${bv})`;\r\n    } else if (step.type === 'insert') {\r\n      return `Insert value ${av} at index ${a}`;\r\n    } else {\r\n      return `${step.type}`;\r\n    }\r\n  };\r\n\r\n// This component/function handles: handleGuess\r\n  const handleGuess = (guess) => {\r\n    const expected = steps[currentStep];\r\n    const guessClean = guess.replace(/\\s/g, '').toLowerCase();\r\n    const expectedStr = `${expected.type}[${(expected.indices || expected.values || []).join(',')}]`;\r\n    if (guessClean === expectedStr) {\r\n      setFeedback('✅ Correct!');\r\n      applyStep(expected);\r\n      setStepHistory(prev => [...prev, expected]);\r\n      setCurrentStep(prev => prev + 1);\r\n    } else {\r\n      setFeedback(`❌ Incorrect. Expected something like: ${expectedStr}`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ fontFamily: 'Arial', margin: '2rem' }}>\r\n      <h1 style={{ fontSize: '2rem' }}>Sorting_Algorithms - Sorting Visualizer</h1>\r\n      <input\r\n        style={{ padding: '0.5rem', width: '300px' }}\r\n        type=\"text\"\r\n        value={array}\r\n        onChange={e => setArray(e.target.value)}\r\n        placeholder=\"Enter comma-separated numbers\"\r\n      />\r\n      <select\r\n        style={{ padding: '0.5rem', marginLeft: '1rem' }}\r\n        value={algorithm}\r\n        onChange={e => setAlgorithm(e.target.value)}\r\n      >\r\n        <option value=\"bubble\">Bubble Sort</option>\r\n        <option value=\"merge\">Merge Sort</option>\r\n        <option value=\"insertion\">Insertion Sort</option>\r\n        <option value=\"quick\">Quick Sort</option>\r\n      </select>\r\n      <label style={{ marginLeft: '1rem' }}>\r\n        <input\r\n          type=\"checkbox\"\r\n          checked={challengeMode}\r\n          onChange={() => setChallengeMode(!challengeMode)}\r\n        />\r\n        Challenge Mode\r\n      </label>\r\n      <label style={{ marginLeft: '1rem' }}>\r\n        <input\r\n          type=\"checkbox\"\r\n          checked={ttsEnabled}\r\n          onChange={() => setTtsEnabled(!ttsEnabled)}\r\n        />\r\n        Narrative Mode\r\n      </label>\r\n        <button style={{ padding: '0.5rem 1rem', marginLeft: '1rem' }} onClick={handleAISuggestion} disabled={isLoadingAI}>\r\n          {isLoadingAI ? 'Optimizing...' : 'Suggest Best Sorting Algorith (AI)'}\r\n        </button>     \r\n       <button style={{ padding: '0.5rem 1rem', marginLeft: '1rem' }} onClick={handleSort}>\r\n        Sort\r\n      </button>\r\n      {aiSuggestion && (\r\n  <div style={{ marginTop: \"1rem\", padding: \"1rem\", background: \"#f5f5f5\", borderRadius: \"5px\" }}>\r\n    <h3>AI Suggestion:</h3>\r\n    <p style={{ margin: \"0.5rem 0\", whiteSpace: \"pre-wrap\" }}>{aiSuggestion}</p>\r\n  </div>\r\n)}\r\n\r\n      {metrics && (\r\n        <div style={{ marginTop: '1rem' }}>\r\n          {metrics?.comparisons !== undefined && <p><strong>Comparisons:</strong> {metrics.comparisons}</p>}\r\n          {metrics?.swaps !== undefined && <p><strong>Swaps:</strong> {metrics.swaps}</p>}\r\n          {metrics?.time !== undefined && <p><strong>Time</strong>: {metrics.time.toFixed(2)} ms</p>}\r\n        </div>\r\n      )}\r\n\r\n      <VisualBars array={currentArray} highlight={highlight} />\r\n\r\n      {ttsEnabled && explanation && (\r\n        <div style={{ marginTop: '1rem', fontStyle: 'italic' }}>\r\n          {explanation}\r\n          <TTS text={explanation} />\r\n        </div>\r\n      )}\r\n\r\n      {!ttsEnabled && stepHistory.length > 0 && (\r\n        <div style={{ marginTop: '1rem' }}>\r\n          <h3>Steps:</h3>\r\n          <ul>\r\n            {stepHistory.map((s, i) => (\r\n              <li key={i}>{formatStep(s)}</li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n\r\n      {challengeMode && steps.length > 0 && currentStep < steps.length && (\r\n        <Challenge currentStep={steps[currentStep]} onGuess={handleGuess} />\r\n      )}\r\n\r\n      {feedback && (\r\n        <div style={{ marginTop: '1rem', fontWeight: 'bold', color: feedback.startsWith('✅') ? 'green' : 'red' }}>\r\n          {feedback}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}