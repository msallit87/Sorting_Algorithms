{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\czsal\\\\Downloads\\\\Sorting_Algorithms\\\\frontend\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport VisualBars from './components/VisualBars';\nimport TTS from './components/TTS';\nimport Challenge from './components/Challenge';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [array, setArray] = useState('');\n  const [algorithm, setAlgorithm] = useState('bubble');\n  const [steps, setSteps] = useState([]);\n  const [metrics, setMetrics] = useState(null);\n  const [currentStep, setCurrentStep] = useState(0);\n  const [currentArray, setCurrentArray] = useState([]);\n  const [highlight, setHighlight] = useState([]);\n  const [explanation, setExplanation] = useState('');\n  const [ttsEnabled, setTtsEnabled] = useState(true);\n  const [challengeMode, setChallengeMode] = useState(true);\n  const [feedback, setFeedback] = useState('');\n  const [stepHistory, setStepHistory] = useState([]);\n  const [aiSuggestion, setAiSuggestion] = useState('');\n  const [isLoadingAI, setIsLoadingAI] = useState(false);\n\n  // Single base‐URL for both dev and prod:\n  const API_BASE = process.env.REACT_APP_API_BASE || 'http://localhost:8000';\n\n  // Validate and parse user input\n  const parseInput = () => {\n    const parts = array.split(',').map(s => s.trim()).filter(s => s !== '');\n    const nums = parts.map(Number);\n    if (parts.length === 0 || nums.some(isNaN)) {\n      alert('Please enter a valid comma-separated list of numbers.');\n      throw new Error('Invalid input');\n    }\n    return nums;\n  };\n\n  // Stream AI suggestion\n  const handleAISuggestion = async () => {\n    let parsedArray;\n    try {\n      parsedArray = parseInput();\n    } catch {\n      return;\n    }\n    // Clear out the old sort animation & history:\n    setSteps([]);\n    setMetrics(null);\n    setCurrentArray([]);\n    setCurrentStep(0);\n    setHighlight([]);\n    setStepHistory([]);\n    setExplanation('');\n    setAiSuggestion('');\n    setIsLoadingAI(true);\n    try {\n      const res = await fetch(`${API_BASE}/ai-suggest`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          array: parsedArray\n        })\n      });\n      if (!res.ok) throw new Error(`Status ${res.status}`);\n      const reader = res.body.getReader();\n      const decoder = new TextDecoder();\n      let done = false;\n      while (!done) {\n        const {\n          value,\n          done: streamDone\n        } = await reader.read();\n        done = streamDone;\n        if (value) {\n          const chunk = decoder.decode(value, {\n            stream: true\n          });\n          chunk.split('\\n').filter(line => line.startsWith('data:')).forEach(line => {\n            if (line === 'data: [DONE]') return;\n            try {\n              var _parsed$choices, _parsed$choices$, _parsed$choices$$delt;\n              const parsed = JSON.parse(line.replace('data: ', ''));\n              const delta = (_parsed$choices = parsed.choices) === null || _parsed$choices === void 0 ? void 0 : (_parsed$choices$ = _parsed$choices[0]) === null || _parsed$choices$ === void 0 ? void 0 : (_parsed$choices$$delt = _parsed$choices$.delta) === null || _parsed$choices$$delt === void 0 ? void 0 : _parsed$choices$$delt.content;\n              if (delta) setAiSuggestion(prev => prev + delta);\n            } catch (e) {\n              console.error('Chunk parse err:', e, line);\n            }\n          });\n        }\n      }\n    } catch (e) {\n      console.error('AI error:', e);\n      setAiSuggestion('Error fetching suggestion.');\n    } finally {\n      setIsLoadingAI(false);\n    }\n  };\n\n  // Run the sort\n  const handleSort = async () => {\n    let parsedArray;\n    try {\n      parsedArray = parseInput();\n    } catch {\n      return;\n    }\n    setAiSuggestion('');\n    try {\n      const {\n        data\n      } = await axios.post(`${API_BASE}/sort/${algorithm}`, {\n        array: parsedArray\n      });\n      setSteps(data.steps);\n      setMetrics(data.metrics);\n      setCurrentArray(parsedArray);\n      setCurrentStep(0);\n      setExplanation('');\n      setFeedback('');\n      setHighlight([]);\n      setStepHistory([]);\n    } catch (e) {\n      console.error('Sort API error:', e);\n      setSteps([]);\n      setMetrics(null);\n      alert('Failed to sort. Check console for details.');\n    }\n  };\n\n  // Narrative autoplay\n  useEffect(() => {\n    if (steps.length && currentStep < steps.length && !challengeMode) {\n      const t = setTimeout(() => {\n        const step = steps[currentStep];\n        setExplanation(step.explanation || '');\n        if (step.type === 'swap' && step.array) {\n          setCurrentArray(step.array);\n          setHighlight(step.indices);\n        } else if (step.type === 'compare') {\n          setHighlight(step.indices || []);\n        } else {\n          setHighlight([]);\n        }\n        setStepHistory(h => [...h, step]);\n        setCurrentStep(i => i + 1);\n      }, 1000);\n      return () => clearTimeout(t);\n    }\n  }, [steps, currentStep, challengeMode]);\n  const formatStep = step => {\n    var _currentArray$a, _currentArray$b;\n    const [a, b] = step.indices || step.values || [];\n    const av = (_currentArray$a = currentArray[a]) !== null && _currentArray$a !== void 0 ? _currentArray$a : a;\n    const bv = (_currentArray$b = currentArray[b]) !== null && _currentArray$b !== void 0 ? _currentArray$b : b;\n    switch (step.type) {\n      case 'compare':\n        return `Compare index ${a} (${av}) vs ${b} (${bv})`;\n      case 'swap':\n        return `Swap index ${a} (${av}) ↔ ${b} (${bv})`;\n      case 'insert':\n        return `Insert ${av} at index ${a}`;\n      default:\n        return step.type;\n    }\n  };\n  const handleGuess = guess => {\n    const expected = steps[currentStep];\n    const clean = guess.replace(/\\s/g, '').toLowerCase();\n    const expStr = `${expected.type}[${(expected.indices || expected.values || []).join(',')}]`;\n    if (clean === expStr) {\n      setFeedback('Correct!');\n      setStepHistory(h => [...h, expected]);\n      setCurrentStep(i => i + 1);\n    } else {\n      setFeedback(`Incorrect. Expected: ${expStr}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      fontFamily: 'Arial',\n      margin: '2rem'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        fontSize: '2rem'\n      },\n      children: \"Sorting Visualizer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"e.g. 5,3,1,4\",\n      value: array,\n      onChange: e => setArray(e.target.value),\n      style: {\n        padding: '0.5rem',\n        width: '300px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: algorithm,\n      onChange: e => setAlgorithm(e.target.value),\n      style: {\n        marginLeft: '1rem',\n        padding: '0.5rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"bubble\",\n        children: \"Bubble Sort\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"merge\",\n        children: \"Merge Sort\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"insertion\",\n        children: \"Insertion Sort\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"quick\",\n        children: \"Quick Sort\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      style: {\n        marginLeft: '1rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: challengeMode,\n        onChange: () => setChallengeMode(m => !m)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this), \" Challenge\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      style: {\n        marginLeft: '1rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: ttsEnabled,\n        onChange: () => setTtsEnabled(t => !t)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this), \" Narrative\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAISuggestion,\n      disabled: isLoadingAI,\n      style: {\n        marginLeft: '1rem',\n        padding: '0.5rem 1rem',\n        opacity: isLoadingAI ? 0.6 : 1,\n        cursor: isLoadingAI ? 'not-allowed' : 'pointer'\n      },\n      children: isLoadingAI ? 'Optimizing…' : 'AI-Suggest Best Sorting Algorithm'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSort,\n      style: {\n        marginLeft: '1rem',\n        padding: '0.5rem 1rem'\n      },\n      children: \"Sort\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }, this), aiSuggestion && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '1rem',\n        padding: '1rem',\n        background: '#f5f5f5'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"AI-Suggest Best Sorting Algorithm:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        style: {\n          whiteSpace: 'pre-wrap'\n        },\n        children: aiSuggestion\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 9\n    }, this), metrics && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '1rem'\n      },\n      children: [metrics.comparisons != null && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Comparisons:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 46\n        }, this), \" \", metrics.comparisons]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 43\n      }, this), metrics.swaps != null && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Swaps:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 40\n        }, this), \" \", metrics.swaps]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 37\n      }, this), metrics.time != null && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Time:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 39\n        }, this), \" \", metrics.time.toFixed(2), \" ms\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 36\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(VisualBars, {\n      array: currentArray,\n      highlight: highlight\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 7\n    }, this), ttsEnabled && explanation && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '1rem',\n        fontStyle: 'italic'\n      },\n      children: [explanation, /*#__PURE__*/_jsxDEV(TTS, {\n        text: explanation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 9\n    }, this), !ttsEnabled && stepHistory.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '1rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Steps\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: stepHistory.map((s, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: formatStep(s)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 42\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 9\n    }, this), challengeMode && steps.length > 0 && currentStep < steps.length && /*#__PURE__*/_jsxDEV(Challenge, {\n      currentStep: steps[currentStep],\n      onGuess: handleGuess\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 9\n    }, this), feedback && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '1rem',\n        color: feedback.startsWith('Correct') ? 'green' : 'red'\n      },\n      children: feedback\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 179,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"8dIEViewxwhNQwvYgeLyQx2kuf4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","VisualBars","TTS","Challenge","jsxDEV","_jsxDEV","App","_s","array","setArray","algorithm","setAlgorithm","steps","setSteps","metrics","setMetrics","currentStep","setCurrentStep","currentArray","setCurrentArray","highlight","setHighlight","explanation","setExplanation","ttsEnabled","setTtsEnabled","challengeMode","setChallengeMode","feedback","setFeedback","stepHistory","setStepHistory","aiSuggestion","setAiSuggestion","isLoadingAI","setIsLoadingAI","API_BASE","process","env","REACT_APP_API_BASE","parseInput","parts","split","map","s","trim","filter","nums","Number","length","some","isNaN","alert","Error","handleAISuggestion","parsedArray","res","fetch","method","headers","body","JSON","stringify","ok","status","reader","getReader","decoder","TextDecoder","done","value","streamDone","read","chunk","decode","stream","line","startsWith","forEach","_parsed$choices","_parsed$choices$","_parsed$choices$$delt","parsed","parse","replace","delta","choices","content","prev","e","console","error","handleSort","data","post","t","setTimeout","step","type","indices","h","i","clearTimeout","formatStep","_currentArray$a","_currentArray$b","a","b","values","av","bv","handleGuess","guess","expected","clean","toLowerCase","expStr","join","style","fontFamily","margin","children","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onChange","target","padding","width","marginLeft","checked","m","onClick","disabled","opacity","cursor","marginTop","background","whiteSpace","comparisons","swaps","time","toFixed","fontStyle","text","onGuess","color","_c","$RefreshReg$"],"sources":["C:/Users/czsal/Downloads/Sorting_Algorithms/frontend/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport VisualBars from './components/VisualBars';\r\nimport TTS from './components/TTS';\r\nimport Challenge from './components/Challenge';\r\n\r\nfunction App() {\r\n  const [array, setArray] = useState('');\r\n  const [algorithm, setAlgorithm] = useState('bubble');\r\n  const [steps, setSteps] = useState([]);\r\n  const [metrics, setMetrics] = useState(null);\r\n  const [currentStep, setCurrentStep] = useState(0);\r\n  const [currentArray, setCurrentArray] = useState([]);\r\n  const [highlight, setHighlight] = useState([]);\r\n  const [explanation, setExplanation] = useState('');\r\n  const [ttsEnabled, setTtsEnabled] = useState(true);\r\n  const [challengeMode, setChallengeMode] = useState(true);\r\n  const [feedback, setFeedback] = useState('');\r\n  const [stepHistory, setStepHistory] = useState([]);\r\n  const [aiSuggestion, setAiSuggestion] = useState('');\r\n  const [isLoadingAI, setIsLoadingAI] = useState(false);\r\n\r\n  // Single base‐URL for both dev and prod:\r\n  const API_BASE = process.env.REACT_APP_API_BASE || 'http://localhost:8000';\r\n\r\n  // Validate and parse user input\r\n  const parseInput = () => {\r\n    const parts = array\r\n      .split(',')\r\n      .map(s => s.trim())\r\n      .filter(s => s !== '');\r\n    const nums = parts.map(Number);\r\n    if (parts.length === 0 || nums.some(isNaN)) {\r\n      alert('Please enter a valid comma-separated list of numbers.');\r\n      throw new Error('Invalid input');\r\n    }\r\n    return nums;\r\n  };\r\n\r\n  // Stream AI suggestion\r\n  const handleAISuggestion = async () => {\r\n    let parsedArray;\r\n    try {\r\n      parsedArray = parseInput();\r\n    } catch {\r\n      return;\r\n    }\r\n    // Clear out the old sort animation & history:\r\n     setSteps([]);\r\n     setMetrics(null);\r\n     setCurrentArray([]);\r\n     setCurrentStep(0);\r\n     setHighlight([]);\r\n     setStepHistory([]);\r\n     setExplanation('');\r\n     setAiSuggestion('');\r\n     setIsLoadingAI(true);\r\n\r\n    try {\r\n      const res = await fetch(`${API_BASE}/ai-suggest`, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ array: parsedArray }),\r\n      });\r\n      if (!res.ok) throw new Error(`Status ${res.status}`);\r\n\r\n      const reader = res.body.getReader();\r\n      const decoder = new TextDecoder();\r\n      let done = false;\r\n      while (!done) {\r\n        const { value, done: streamDone } = await reader.read();\r\n        done = streamDone;\r\n        if (value) {\r\n          const chunk = decoder.decode(value, { stream: true });\r\n          chunk\r\n            .split('\\n')\r\n            .filter(line => line.startsWith('data:'))\r\n            .forEach(line => {\r\n              if (line === 'data: [DONE]') return;\r\n              try {\r\n                const parsed = JSON.parse(line.replace('data: ', ''));\r\n                const delta = parsed.choices?.[0]?.delta?.content;\r\n                if (delta) setAiSuggestion(prev => prev + delta);\r\n              } catch (e) {\r\n                console.error('Chunk parse err:', e, line);\r\n              }\r\n            });\r\n        }\r\n      }\r\n    } catch (e) {\r\n      console.error('AI error:', e);\r\n      setAiSuggestion('Error fetching suggestion.');\r\n    } finally {\r\n      setIsLoadingAI(false);\r\n    }\r\n  };\r\n\r\n  // Run the sort\r\n  const handleSort = async () => {\r\n    let parsedArray;\r\n    try {\r\n      parsedArray = parseInput();\r\n    } catch {\r\n      return;\r\n    }\r\n    setAiSuggestion('');\r\n    try {\r\n      const { data } = await axios.post(\r\n        `${API_BASE}/sort/${algorithm}`,\r\n        { array: parsedArray }\r\n      );\r\n      setSteps(data.steps);\r\n      setMetrics(data.metrics);\r\n      setCurrentArray(parsedArray);\r\n      setCurrentStep(0);\r\n      setExplanation('');\r\n      setFeedback('');\r\n      setHighlight([]);\r\n      setStepHistory([]);\r\n    } catch (e) {\r\n      console.error('Sort API error:', e);\r\n      setSteps([]);\r\n      setMetrics(null);\r\n      alert('Failed to sort. Check console for details.');\r\n    }\r\n  };\r\n\r\n  // Narrative autoplay\r\n  useEffect(() => {\r\n    if (steps.length && currentStep < steps.length && !challengeMode) {\r\n      const t = setTimeout(() => {\r\n        const step = steps[currentStep];\r\n        setExplanation(step.explanation || '');\r\n        if (step.type === 'swap' && step.array) {\r\n          setCurrentArray(step.array);\r\n          setHighlight(step.indices);\r\n        } else if (step.type === 'compare') {\r\n          setHighlight(step.indices || []);\r\n        } else {\r\n          setHighlight([]);\r\n        }\r\n        setStepHistory(h => [...h, step]);\r\n        setCurrentStep(i => i + 1);\r\n      }, 1000);\r\n      return () => clearTimeout(t);\r\n    }\r\n  }, [steps, currentStep, challengeMode]);\r\n\r\n  const formatStep = step => {\r\n    const [a, b] = step.indices || step.values || [];\r\n    const av = currentArray[a] ?? a;\r\n    const bv = currentArray[b] ?? b;\r\n    switch (step.type) {\r\n      case 'compare':\r\n        return `Compare index ${a} (${av}) vs ${b} (${bv})`;\r\n      case 'swap':\r\n        return `Swap index ${a} (${av}) ↔ ${b} (${bv})`;\r\n      case 'insert':\r\n        return `Insert ${av} at index ${a}`;\r\n      default:\r\n        return step.type;\r\n    }\r\n  };\r\n\r\n  const handleGuess = guess => {\r\n    const expected = steps[currentStep];\r\n    const clean = guess.replace(/\\s/g, '').toLowerCase();\r\n    const expStr = `${expected.type}[${(expected.indices || expected.values || []).join(',')}]`;\r\n    if (clean === expStr) {\r\n      setFeedback('Correct!');\r\n      setStepHistory(h => [...h, expected]);\r\n      setCurrentStep(i => i + 1);\r\n    } else {\r\n      setFeedback(`Incorrect. Expected: ${expStr}`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ fontFamily: 'Arial', margin: '2rem' }}>\r\n      <h1 style={{ fontSize: '2rem' }}>Sorting Visualizer</h1>\r\n\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"e.g. 5,3,1,4\"\r\n        value={array}\r\n        onChange={e => setArray(e.target.value)}\r\n        style={{ padding: '0.5rem', width: '300px' }}\r\n      />\r\n\r\n      <select\r\n        value={algorithm}\r\n        onChange={e => setAlgorithm(e.target.value)}\r\n        style={{ marginLeft: '1rem', padding: '0.5rem' }}\r\n      >\r\n        <option value=\"bubble\">Bubble Sort</option>\r\n        <option value=\"merge\">Merge Sort</option>\r\n        <option value=\"insertion\">Insertion Sort</option>\r\n        <option value=\"quick\">Quick Sort</option>\r\n      </select>\r\n\r\n      <label style={{ marginLeft: '1rem' }}>\r\n        <input\r\n          type=\"checkbox\"\r\n          checked={challengeMode}\r\n          onChange={() => setChallengeMode(m => !m)}\r\n        /> Challenge\r\n      </label>\r\n\r\n      <label style={{ marginLeft: '1rem' }}>\r\n        <input\r\n          type=\"checkbox\"\r\n          checked={ttsEnabled}\r\n          onChange={() => setTtsEnabled(t => !t)}\r\n        /> Narrative\r\n      </label>\r\n\r\n      <button\r\n        onClick={handleAISuggestion}\r\n        disabled={isLoadingAI}\r\n        style={{\r\n          marginLeft: '1rem',\r\n          padding: '0.5rem 1rem',\r\n          opacity: isLoadingAI ? 0.6 : 1,\r\n          cursor: isLoadingAI ? 'not-allowed' : 'pointer',\r\n        }}\r\n      >\r\n        {isLoadingAI ? 'Optimizing…' : 'AI-Suggest Best Sorting Algorithm'}\r\n      </button>\r\n\r\n      <button\r\n        onClick={handleSort}\r\n        style={{ marginLeft: '1rem', padding: '0.5rem 1rem' }}\r\n      >\r\n        Sort\r\n      </button>\r\n\r\n      {aiSuggestion && (\r\n        <div style={{ marginTop: '1rem', padding: '1rem', background: '#f5f5f5' }}>\r\n          <h3>AI-Suggest Best Sorting Algorithm:</h3>\r\n          <pre style={{ whiteSpace: 'pre-wrap' }}>{aiSuggestion}</pre>\r\n        </div>\r\n      )}\r\n\r\n      {metrics && (\r\n        <div style={{ marginTop: '1rem' }}>\r\n          {metrics.comparisons != null && <p><strong>Comparisons:</strong> {metrics.comparisons}</p>}\r\n          {metrics.swaps != null && <p><strong>Swaps:</strong> {metrics.swaps}</p>}\r\n          {metrics.time != null && <p><strong>Time:</strong> {metrics.time.toFixed(2)} ms</p>}\r\n        </div>\r\n      )}\r\n\r\n      <VisualBars array={currentArray} highlight={highlight} />\r\n\r\n      {ttsEnabled && explanation && (\r\n        <div style={{ marginTop: '1rem', fontStyle: 'italic' }}>\r\n          {explanation}\r\n          <TTS text={explanation} />\r\n        </div>\r\n      )}\r\n\r\n      {!ttsEnabled && stepHistory.length > 0 && (\r\n        <div style={{ marginTop: '1rem' }}>\r\n          <h3>Steps</h3>\r\n          <ul>{stepHistory.map((s, i) => <li key={i}>{formatStep(s)}</li>)}</ul>\r\n        </div>\r\n      )}\r\n\r\n      {challengeMode && steps.length > 0 && currentStep < steps.length && (\r\n        <Challenge currentStep={steps[currentStep]} onGuess={handleGuess} />\r\n      )}\r\n\r\n      {feedback && (\r\n        <div style={{ marginTop: '1rem', color: feedback.startsWith('Correct') ? 'green' : 'red' }}>\r\n          {feedback}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}